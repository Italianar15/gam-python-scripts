#Set a default photo for users that don't already have one.

import os
import subprocess

# Configuration
user_list_file = r"<PATH_TO_ACTIVE_USER_LIST_FILE>"  # File containing the list of active users, one per line
drivedir = r"<PATH_TO_DRIVE_DIRECTORY>"  # Directory where photos will be downloaded
default_photo_path = r"<PATH_TO_DEFAULT_PHOTO>"  # Default photo location

# Step 1: Dump a list of users and filter only active users
print("Fetching list of active users...")
subprocess.run(['gam', 'print', 'users', 'query', "isSuspended=false", 'fields', 'primaryEmail'], 
               stdout=open(user_list_file, 'w'), shell=True)

# Read users from the list
with open(user_list_file, 'r') as f:
    users = f.readlines()

# Loop through each user and check for the photo
for user in users:
    user = user.strip()
    if not user or user.lower() == 'primaryemail':
        continue
    photo_file = os.path.join(drivedir, f"{user.split('@')[0]}.jpg")

    try:
        # Attempt to get the user's photo
        subprocess.run(['gam', 'user', user, 'get', 'photo', 'drivedir', 'filename', '#username#.jpg'], check=True)
        
        # Check if the photo file was created
        if not os.path.exists(photo_file):
            print(f"No photo for user {user}. Setting default photo...")
            subprocess.run(['gam', 'user', user, 'update', 'photo', default_photo_path], check=True)
        else:
            print(f"Photo exists for user {user}.")
    except subprocess.CalledProcessError:
        # If there is an error (e.g., user has no photo), set the default photo
        print(f"Error retrieving photo for user {user}. Setting default photo...")
        subprocess.run(['gam', 'user', user, 'update', 'photo', default_photo_path], check=True)
